<Button x:Class="MTMCL.Task.TaskListBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:local="clr-namespace:MTMCL.Task"
             mc:Ignorable="d" 
             d:DesignHeight="75" d:DesignWidth="661" Loaded="UserControl_Loaded" BorderThickness="0" Padding="0" Style="{DynamicResource ButtonStyle}">
    <Button.Resources>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
            <Setter Property="Custom:ControlsHelper.CornerRadius" Value="0"/>
            <Setter Property="MinHeight" Value="25"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="Padding" Value="5,6"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource GrayBrush7}"/>
                            </Trigger>
                            <!--<Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                            </Trigger>-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Button.Resources>
    <Button.Background>
        <ImageBrush ImageSource="{Binding ImgSrc, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}" Stretch="UniformToFill"/>
    </Button.Background>
    <Grid Margin="0" Width="661" Height="75">
        <Label x:Name="lblTaskName" FontSize="13.333" FontWeight="Bold" HorizontalAlignment="Left" Width="395" Margin="75,0,0,0">
            <AccessText Text="" FontSize="21.333" HorizontalAlignment="Left" VerticalAlignment="Center" TextWrapping="Wrap"/>
        </Label>
        <Label x:Name="lblTaskStatus" Content="" Margin="0,30,0,0" HorizontalContentAlignment="Right" FontSize="21.333" FontWeight="Bold" HorizontalAlignment="Right" Width="325"/>
        <Rectangle HorizontalAlignment="Left" Margin="7.5,7.5,0,7.5" Width="60" Fill="{DynamicResource BlackBrush}">
            <Rectangle.OpacityMask>
                <VisualBrush Visual="{Binding Icon, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TaskListBar}}}" Stretch="None"/>
            </Rectangle.OpacityMask>
        </Rectangle>
    </Grid>
</Button>
