<Button
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MTMCL.Resources"
            xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls" x:Name="button"
    x:Class="MTMCL.Resources.PreviewItem"
             mc:Ignorable="d" 
             d:DesignHeight="150" d:DesignWidth="150" Padding="0" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0" Style="{DynamicResource ButtonStyle}" Loaded="button_Loaded">
    <Button.Resources>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
            <Setter Property="Custom:ControlsHelper.CornerRadius" Value="0"/>
            <Setter Property="MinHeight" Value="25"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource GrayBrush7}"/>
                            </Trigger>
                            <!--<Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                            </Trigger>-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Button.Resources>
    <Grid Width="150" Height="150">
        <Grid Margin="5,5,5,24">
            <Canvas x:Name="canvaColor" Height="100" Width="100" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0">
                <Canvas.Background>
                    <SolidColorBrush Color="{Binding Color, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PreviewItem}}}"/>
                </Canvas.Background>
            </Canvas>
            <Grid x:Name="imagePreview">
                <Grid.Background>
                    <ImageBrush ImageSource="{Binding ImgSrc, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PreviewItem}}}" Stretch="{Binding Stretch, FallbackValue=UniformToFill, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PreviewItem}}, TargetNullValue=UniformToFill}" TileMode="Tile"/>
                </Grid.Background>
            </Grid>
        </Grid>
        <Label x:Name="lblPreview" Margin="0,126,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
            <AccessText x:Name="txtPreview" TextAlignment="Center" Text="{Binding Description, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PreviewItem}}}" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="12" TextOptions.TextHintingMode="Animated"/>
        </Label>

    </Grid>
</Button>
